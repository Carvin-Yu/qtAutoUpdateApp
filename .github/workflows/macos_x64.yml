# 下面是一个基础的工作流，你可以基于它来编写自己的 Github Actions
name: 构建应用程序MacOS_x64

# 控制工作流何时运行
on:
  #   # 当 `push` 或 `pull request` 事件发生时就触发工作流的执行，这里仅仅针对 `master` 分支
  push:
    #    branches: [ main ]
    tags:
      - '*'
  #   pull_request:
  #     branches: [ main ]
  # 允许用于在 `Actions` 标签页中手动运行工作流
  workflow_dispatch:

#权限
permissions: write-all
# 工作流由一个或多个作业( job )组成，这些作业可以顺序运行也可以并行运行
jobs:
  # 当前的工作流仅包含一个作业，作业 id 是 "build"
  build:
    # 执行作业所需的运行器 runner
    runs-on: ${{ matrix.os }}
    environment: build
    strategy:
      matrix:
        os: [ macos-12 ]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          architecture: "x64"
          cache: 'pip'
      - run: |
          pip install -r requirements.txt
      - name: Build application
        run: |
          rm -rf build
          rm -rf dist
          # 获取当前的版本号
          version=$(git describe --tags --always)
          # 将版本号写入 version.py 文件
          echo "version = '$version'" > version.py
          pyinstaller my_app_macos.spec
      - name: Run App Test # 运行程序检查是否返回 app run success
        run: |
          # 运行 ./dist/my_app.app/Contents/MacOS/my_app 检查返回文本 是否有 app run success
            ./dist/my_app.app/Contents/MacOS/my_app test
            if [ $? -eq 0 ]; then
              echo "app run success"
            else
              echo "app run failed"
              exit 1
            fi
      - name: Create Zip Package # 创建压缩包
        run: |
          cd ./dist
          zip -r ./my_app_MacOS.zip ./my_app.app
      - name: Upload Artifact # 上传构建产物，这里我们的源码目录是根目录，而实际运行的代码是构建后的 dist 目录
        uses: actions/upload-artifact@v3
        with:
          name: MacOS_x64
          path: ./dist/my_app_MacOS.zip # 上传 dist 目录下的 app 执行文件

      - uses: ncipollo/release-action@v1 # 发布版本
        with:
          allowUpdates: true
          #        tag: "latest"
          bodyFile: ./版本描述.md
          artifacts: "dist/*.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
