name: 构建应用程序Windows_x64

# 控制工作流何时运行
on:
#   # 当 `push` 或 `pull request` 事件发生时就触发工作流的执行，这里仅仅针对 `master` 分支
  push:
#    branches: [ main ]
    tags:
      - '*'
#   pull_request:
#     branches: [ main ]
# 允许用于在 `Actions` 标签页中手动运行工作流
  workflow_dispatch:


permissions: write-all

jobs:
  build:
    runs-on: ${{ matrix.os }}
    environment: build
    strategy:
      matrix:
        os: [windows-2022]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        architecture: "x64"
        cache: 'pip'
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
    - name: Build
      run: |
        pyinstaller --onefile --windowed --icon "QtEsayDesigner.icns" "my_app.py"
    #- name: Create Zip Package # 创建压缩包
    #  run: |
    #    zip -r ./dist/MacOS_ARM64.zip ./dist/app
    - name: Upload Artifact # 上传构建产物，这里我们的源码目录是根目录，而实际运行的代码是构建后的 dist 目录
      uses: actions/upload-artifact@v3
      with:
        name: Win_x64
        path: ./dist/my_app.exe # 上传 dist 目录下的 app 执行文件

    - uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
#        tag: "latest"
        artifacts: "dist/*.exe"
        token: ${{ secrets.GITHUB_TOKEN }}


